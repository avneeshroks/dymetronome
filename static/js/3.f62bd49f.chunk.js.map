{"version":3,"sources":["../../modules/BrowserRouter.js","../../modules/HashRouter.js","../../modules/utils/locationUtils.js","../../modules/Link.js","../../modules/NavLink.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/superPropBase.js","utils/baseMetronome.js","utils/scheduledMetronome.js","metronome/metronome.jsx"],"names":["React","Component","resolveToLocation","to","currentLocation","normalizeToLocation","createLocation","forwardRefShim","C","forwardRef","LinkAnchor","innerRef","navigate","onClick","rest","target","props","event","ex","isModifiedEvent","forwardedRef","Link","component","replace","RouterContext","context","history","location","href","method","ariaCurrent","activeClassName","activeStyle","classNameProp","className","exact","isActiveProp","isActive","locationProp","strict","styleProp","style","toLocation","path","escapedPath","match","matchPath","classnames","i","joinClassnames","property","receiver","Reflect","get","base","object","Object","prototype","hasOwnProperty","call","getPrototypeOf","desc","getOwnPropertyDescriptor","value","ScheduledMetronome","plan","tickTimeouts","callbackFn","endCallbackFn","now","this","audioCtx","currentTime","forEach","segment","index","console","log","tempo","ticks","timeoutDuration","clickAtTime","x","push","setTimeout","stop","timeOut","clearTimeout","playing","tick","tickVolume","soundHz","window","AudioContext","webkitAudioContext","createOscillator","createGain","type","frequency","gain","connect","destination","start","time","cancelScheduledValues","setValueAtTime","linearRampToValueAtTime","initAudio","Metronome","currentTempo","rawPlan","getPlan","formatPlan","handleMetronomeStartClick","bind","handleMetronomeStopClick","handleTick","handleStop","handlePlanSeqEnd","duration","map","item","e","metronome","setState","stopM"],"mappings":"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","file":"static/js/3.f62bd49f.chunk.js","sourcesContent":["import React from \"react\";\nimport { Router } from \"react-router\";\nimport { createBrowserHistory as createHistory } from \"history\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\n/**\n * The public API for a <Router> that uses HTML5 history.\n */\nclass BrowserRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  BrowserRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    forceRefresh: PropTypes.bool,\n    getUserConfirmation: PropTypes.func,\n    keyLength: PropTypes.number\n  };\n\n  BrowserRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<BrowserRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { BrowserRouter as Router }`.\"\n    );\n  };\n}\n\nexport default BrowserRouter;\n","import React from \"react\";\nimport { Router } from \"react-router\";\nimport { createHashHistory as createHistory } from \"history\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\n/**\n * The public API for a <Router> that uses window.location.hash.\n */\nclass HashRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  HashRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    getUserConfirmation: PropTypes.func,\n    hashType: PropTypes.oneOf([\"hashbang\", \"noslash\", \"slash\"])\n  };\n\n  HashRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<HashRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { HashRouter as Router }`.\"\n    );\n  };\n}\n\nexport default HashRouter;\n","import { createLocation } from \"history\";\n\nexport const resolveToLocation = (to, currentLocation) =>\n  typeof to === \"function\" ? to(currentLocation) : to;\n\nexport const normalizeToLocation = (to, currentLocation) => {\n  return typeof to === \"string\"\n    ? createLocation(to, null, null, currentLocation)\n    : to;\n};\n","import React from \"react\";\nimport { __RouterContext as RouterContext } from \"react-router\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport { resolveToLocation, normalizeToLocation } from \"./utils/locationUtils\";\n\n// React 15 compat\nconst forwardRefShim = C => C;\nlet { forwardRef } = React;\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = forwardRefShim;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nconst LinkAnchor = forwardRef(\n  (\n    {\n      innerRef, // TODO: deprecate\n      navigate,\n      onClick,\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    const { target } = rest;\n\n    let props = {\n      ...rest,\n      onClick: event => {\n        try {\n          if (onClick) onClick(event);\n        } catch (ex) {\n          event.preventDefault();\n          throw ex;\n        }\n\n        if (\n          !event.defaultPrevented && // onClick prevented default\n          event.button === 0 && // ignore everything but left clicks\n          (!target || target === \"_self\") && // let browser handle \"target=_blank\" etc.\n          !isModifiedEvent(event) // ignore clicks with modifier keys\n        ) {\n          event.preventDefault();\n          navigate();\n        }\n      }\n    };\n\n    // React 15 compat\n    if (forwardRefShim !== forwardRef) {\n      props.ref = forwardedRef || innerRef;\n    } else {\n      props.ref = innerRef;\n    }\n\n    return <a {...props} />;\n  }\n);\n\nif (__DEV__) {\n  LinkAnchor.displayName = \"LinkAnchor\";\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nconst Link = forwardRef(\n  (\n    {\n      component = LinkAnchor,\n      replace,\n      to,\n      innerRef, // TODO: deprecate\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <Link> outside a <Router>\");\n\n          const { history } = context;\n\n          const location = normalizeToLocation(\n            resolveToLocation(to, context.location),\n            context.location\n          );\n\n          const href = location ? history.createHref(location) : \"\";\n          const props = {\n            ...rest,\n            href,\n            navigate() {\n              const location = resolveToLocation(to, context.location);\n              const method = replace ? history.replace : history.push;\n\n              method(location);\n            }\n          };\n\n          // React 15 compat\n          if (forwardRefShim !== forwardRef) {\n            props.ref = forwardedRef || innerRef;\n          } else {\n            props.innerRef = innerRef;\n          }\n\n          return React.createElement(component, props);\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n);\n\nif (__DEV__) {\n  const toType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.func\n  ]);\n  const refType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any })\n  ]);\n\n  Link.displayName = \"Link\";\n\n  Link.propTypes = {\n    innerRef: refType,\n    onClick: PropTypes.func,\n    replace: PropTypes.bool,\n    target: PropTypes.string,\n    to: toType.isRequired\n  };\n}\n\nexport default Link;\n","import React from \"react\";\nimport { __RouterContext as RouterContext, matchPath } from \"react-router\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport Link from \"./Link\";\nimport { resolveToLocation, normalizeToLocation } from \"./utils/locationUtils\";\n\n// React 15 compat\nconst forwardRefShim = C => C;\nlet { forwardRef } = React;\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = forwardRefShim;\n}\n\nfunction joinClassnames(...classnames) {\n  return classnames.filter(i => i).join(\" \");\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = forwardRef(\n  (\n    {\n      \"aria-current\": ariaCurrent = \"page\",\n      activeClassName = \"active\",\n      activeStyle,\n      className: classNameProp,\n      exact,\n      isActive: isActiveProp,\n      location: locationProp,\n      strict,\n      style: styleProp,\n      to,\n      innerRef, // TODO: deprecate\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <NavLink> outside a <Router>\");\n\n          const currentLocation = locationProp || context.location;\n          const toLocation = normalizeToLocation(\n            resolveToLocation(to, currentLocation),\n            currentLocation\n          );\n          const { pathname: path } = toLocation;\n          // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n          const escapedPath =\n            path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n\n          const match = escapedPath\n            ? matchPath(currentLocation.pathname, {\n                path: escapedPath,\n                exact,\n                strict\n              })\n            : null;\n          const isActive = !!(isActiveProp\n            ? isActiveProp(match, currentLocation)\n            : match);\n\n          const className = isActive\n            ? joinClassnames(classNameProp, activeClassName)\n            : classNameProp;\n          const style = isActive ? { ...styleProp, ...activeStyle } : styleProp;\n\n          const props = {\n            \"aria-current\": (isActive && ariaCurrent) || null,\n            className,\n            style,\n            to: toLocation,\n            ...rest\n          };\n\n          // React 15 compat\n          if (forwardRefShim !== forwardRef) {\n            props.ref = forwardedRef || innerRef;\n          } else {\n            props.innerRef = innerRef;\n          }\n\n          return <Link {...props} />;\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n\n  const ariaCurrentType = PropTypes.oneOf([\n    \"page\",\n    \"step\",\n    \"location\",\n    \"date\",\n    \"time\",\n    \"true\"\n  ]);\n\n  NavLink.propTypes = {\n    ...Link.propTypes,\n    \"aria-current\": ariaCurrentType,\n    activeClassName: PropTypes.string,\n    activeStyle: PropTypes.object,\n    className: PropTypes.string,\n    exact: PropTypes.bool,\n    isActive: PropTypes.func,\n    location: PropTypes.object,\n    strict: PropTypes.bool,\n    style: PropTypes.object\n  };\n}\n\nexport default NavLink;\n","import superPropBase from \"./superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","/*\n * Base metronome, with no timing.\n * More like a \"click on command\" class.\n */\nexport class BaseMetronome {\n    constructor() {\n        this.playing = false;\n\n        this.audioCtx = null;\n        this.tick = null;\n        this.tickVolume = null;\n        this.soundHz = 1000;\n    }\n\n    initAudio() {\n        this.audioCtx = new (window.AudioContext || window.webkitAudioContext)();\n        this.tick = this.audioCtx.createOscillator();\n        this.tickVolume = this.audioCtx.createGain();\n\n        this.tick.type = \"sine\";\n        this.tick.frequency.value = this.soundHz;\n        this.tickVolume.gain.value = 0;\n\n        this.tick.connect(this.tickVolume);\n        this.tickVolume.connect(this.audioCtx.destination);\n        this.tick.start(0); // No offset, start immediately.\n    }\n\n    click(callbackFn) {\n        const time = this.audioCtx.currentTime;\n        this.clickAtTime(time);\n\n        if (callbackFn) {\n            callbackFn(time);\n        }\n    }\n\n    clickAtTime(time) {\n        // Silence the click.\n        this.tickVolume.gain.cancelScheduledValues(time);\n        this.tickVolume.gain.setValueAtTime(0, time);\n\n        // Audible click sound.\n        this.tickVolume.gain.linearRampToValueAtTime(1, time + 0.001);\n        this.tickVolume.gain.linearRampToValueAtTime(0, time + 0.001 + 0.01);\n    }\n\n    start(callbackFn) {\n        if (this.playing) {\n            this.stop();\n        }\n        this.playing = true;\n        this.initAudio();\n    }\n\n    stop(callbackFn) {\n        this.tick.stop();\n        this.playing = false;\n        this.audioCtx = null;\n        this.tickVolume.gain.value = 0;\n    }\n}\n","import { BaseMetronome } from \"./baseMetronome\";\n\nexport class ScheduledMetronome extends BaseMetronome {\n    constructor(plan) {\n        super();\n        this.plan = plan;\n        this.tickTimeouts = [];\n    }\n\n    start(callbackFn, endCallbackFn) {\n        super.start();\n\n        let now = this.audioCtx.currentTime;\n\n        this.plan.forEach((segment, index) => {\n            console.log(\n                `scheduling for segment : ${index + 1}. With tempo : ${\n                segment.tempo\n                } and Ticks : ${segment.ticks}.`\n            );\n\n            const timeoutDuration = 60 / segment.tempo;\n\n            // Schedule all the clicks ahead.\n            for (let i = 0; i < segment.ticks; i++) {\n                this.clickAtTime(now);\n                const x = now;\n                this.tickTimeouts.push(setTimeout(() => callbackFn(x, segment.tempo), now * 1000));\n                now += timeoutDuration;\n            }\n        });\n\n        console.log(\n            `registering end event.`\n        );\n        this.tickTimeouts.push(setTimeout(() => endCallbackFn(), now * 1000 + 10));\n    }\n\n    stopM(callbackFn) {\n        this.stop(callbackFn);\n\n        this.tickTimeouts.forEach((timeOut)=> {\n            clearTimeout(timeOut);\n        });\n\n        this.tickTimeouts = [];\n    }\n}","import React from 'react';\nimport { ScheduledMetronome } from '../utils/scheduledMetronome';\nimport './metronome.css';\nimport { Link } from 'react-router-dom';\n\nexport default class Metronome extends React.Component {\n\n    metronome;\n    currentTempo = null;\n\n    constructor(props) {\n        super(props);\n        let rawPlan = this.getPlan();\n        this.plan = this.formatPlan(rawPlan);\n        this.handleMetronomeStartClick = this.handleMetronomeStartClick.bind(this);\n        this.handleMetronomeStopClick = this.handleMetronomeStopClick.bind(this);\n        this.handleTick = this.handleTick.bind(this);\n        this.handleStop = this.handleStop.bind(this);\n        this.handlePlanSeqEnd = this.handlePlanSeqEnd.bind(this);\n    }\n\n    getPlan() {\n        return [\n            {\n                tempo: 40,\n                duration: 0.1\n            },\n            {\n                tempo: 60,\n                duration: 0.1\n            },\n            {\n                tempo: 80,\n                duration: 0.1\n            },\n            {\n                tempo: 120,\n                duration: 0.2\n            },\n            {\n                tempo: 210,\n                duration: 0.2\n            },\n        ];\n    }\n\n    formatPlan(plan) {\n        plan.map(item => {\n            item[\"ticks\"] = item.tempo * item.duration;\n            return item;\n        });\n        return plan;\n    }\n\n    handleMetronomeStartClick(e){\n        this.metronome = new ScheduledMetronome(this.plan);\n        this.metronome.start(this.handleTick, this.handlePlanSeqEnd);\n        this.setState({});\n    }\n    \n    handleMetronomeStopClick(e){\n        this.metronome.stopM(this.handleStop);\n        this.metronome = null;\n        this.setState({});\n    }\n\n    handleTick(time, currentTempo) {\n        console.log(`tick @ ${time}`);\n        this.currentTempo = currentTempo;\n        this.setState({});\n    }\n    \n    handleStop(time) {\n        console.log(`Metronome Stopped`);\n    }\n    \n    handlePlanSeqEnd() {\n        this.metronome = null;\n        this.setState({});\n    }\n\n    render() {\n        const playing = this.metronome && !!this.metronome.playing;\n        const currentTempo = playing && this.currentTempo ? this.currentTempo : null;\n\n        return (\n            <div className=\"mWrapper\">\n                <div className=\"btnWrapper\">\n                    {\n                        !playing\n                        ? <button\n                            className=\"startBtn\"\n                            onClick={this.handleMetronomeStartClick}\n                        >\n                            <span className=\"btnText\">\n                                Start\n                            </span>\n                        </button>\n                        :<button\n                            className=\"endBtn\"\n                            onClick={this.handleMetronomeStopClick}\n                        >\n                            <span className=\"btnText\">\n                                Stop\n                            </span>\n                        </button>\n                    }\n                </div>\n                <div className=\"playingMsg\">\n                    {\n                        currentTempo\n                        ? <div>\n                            {`Currently playing @ : ${this.currentTempo} Bpm...`}\n                        </div>\n                        : <div>\n                            {`It'll play as per plan selected. If not created yet then go to `}\n                            <Link to=\"/\">plan...</Link>\n                        </div>\n                    }\n                </div>\n            </div>\n        )\n    }\n}"],"sourceRoot":""}